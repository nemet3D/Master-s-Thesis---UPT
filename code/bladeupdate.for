C   compile and link with SLATEC and LAPACK libraries
C   -L /opt/local/lib -lslatec -llapack

      SUBROUTINE BLADEUPDATE(RELERR)
C   update the blade from BLADEOLD to BLADENEW
C   update BLADESLOPE then BLADESHAPE
      IMPLICIT NONE
      DOUBLEPRECISION RELERR ! relative error between BLADENEW/OLD
      INTEGER NMAX
      PARAMETER (NMAX=100)
      INTEGER NGRID,IGRID
      DOUBLEPRECISION XGRID(NMAX),BLADESEGMENT,
     &  BLADESHAPEOLD(NMAX),BLADESLOPEOLD(NMAX),
     &  BLADESHAPENEW(NMAX),BLADESLOPENEW(NMAX),
     &  PAR(3),VY1,VY2,S,
     &  TWOPI,LOADING
      PARAMETER (TWOPI=6.283185307179586D0)
      DOUBLEPRECISION ABSERR,EPSABS,EPSREL,RESULT,WORK
      PARAMETER (EPSABS=1.D-5,EPSREL=1.D-6)
      INTEGER IER,IWORK,LAST,LENW,LIMIT,NEVAL
      PARAMETER (LIMIT=200,LENW=4*LIMIT)
      DIMENSION IWORK(LIMIT),WORK(LENW)
      COMMON /GRID/ XGRID,BLADESEGMENT,NGRID,IGRID
      COMMON /BLADE/BLADESHAPEOLD,BLADESLOPEOLD,
     &              BLADESHAPENEW,BLADESLOPENEW
C      COMMON /PARAMS/ PAR
      COMMON /FLOWDIR/ VY1,VY2
      COMMON /SPACING/ S ! cascade spacing
      DOUBLEPRECISION F1regular ! integrand for BLADESLOPE
C      DOUBLEPRECISION F1singular ! integrand for BLADESLOPE
      DOUBLEPRECISION F2regular ! integrand for BLADESHAPE
      EXTERNAL F1regular,F2regular

C   first update the blade shape
C   LEADING EDGE blade shape
      IGRID=1
      CALL DQAGS(F2regular,XGRID(1),XGRID(NGRID),
     &  EPSABS,EPSREL,RESULT,ABSERR,NEVAL,IER,LIMIT,LENW,LAST,
     &  IWORK,WORK)
      IF(IER.NE.0) WRITE(*,'('' IERR at'',2I3)') IGRID,IER
      BLADESHAPENEW(IGRID)=XGRID(IGRID)*(VY1+VY2)/2.D0+RESULT
     &  +S/TWOPI*(VY2-VY1)*LOADING(XGRID(IGRID))
     &  *(DLOG(TWOPI/S)
     &  +0.5D0*DLOG((1.D0+(BLADESLOPEOLD(IGRID))**2)/2.D0)
     &  -1.D0)
C   interior points blade shape
      DO IGRID=2,NGRID-1
      CALL DQAGS(F2regular,XGRID(1),XGRID(NGRID),
     &  EPSABS,EPSREL,RESULT,ABSERR,NEVAL,IER,LIMIT,LENW,LAST,
     &  IWORK,WORK)
      IF(IER.NE.0) WRITE(*,'('' IERR at'',2I3)') IGRID,IER
      BLADESHAPENEW(IGRID)=XGRID(IGRID)*(VY1+VY2)/2.D0+RESULT
     &  +S/TWOPI*(VY2-VY1)*LOADING(XGRID(IGRID))
     &  *(DLOG(TWOPI/S)
     &  +0.5D0*DLOG((1.D0+(BLADESLOPEOLD(IGRID))**2)/2.D0)
     &  +XGRID(IGRID)*DLOG(XGRID(IGRID))
     &  +(1.D0-XGRID(IGRID))*DLOG(1.D0-XGRID(IGRID))
     &  -1.D0)
      END DO
C   TRAILING EDGE blade shape
      IGRID=NGRID
      CALL DQAGS(F2regular,XGRID(1),XGRID(NGRID),
     &  EPSABS,EPSREL,RESULT,ABSERR,NEVAL,IER,LIMIT,LENW,LAST,
     &  IWORK,WORK)
      IF(IER.NE.0) WRITE(*,'('' IERR at'',2I3)') IGRID,IER
      BLADESHAPENEW(IGRID)=XGRID(IGRID)*(VY1+VY2)/2.D0+RESULT
     &  +S/TWOPI*(VY2-VY1)*LOADING(XGRID(IGRID))
     &  *(DLOG(TWOPI/S)
     &  +0.5D0*DLOG((1.D0+(BLADESLOPEOLD(IGRID))**2)/2.D0)
     &  -1.D0)

C   second update the blade slope
C   LEADING EDGE blade slope
C   @ IGRID=1 there should be a continuation from IGRID=2,3,...
C   when LOADING(0) is finite!
      IGRID=1
      CALL DQAGS(F1regular,XGRID(1),XGRID(NGRID),
     &  EPSABS,EPSREL,RESULT,ABSERR,NEVAL,IER,LIMIT,LENW,LAST,
     &  IWORK,WORK)
      IF(IER.NE.0) WRITE(*,'('' IERR at'',2I3)') IGRID,IER
      BLADESLOPENEW(IGRID)=(VY1+VY2)/2.D0+RESULT
C   interior points blade slope
      DO IGRID=2,NGRID-1
      CALL DQAGS(F1regular,XGRID(1),XGRID(NGRID),
     &  EPSABS,EPSREL,RESULT,ABSERR,NEVAL,IER,LIMIT,LENW,LAST,
     &  IWORK,WORK)
      IF(IER.NE.0) WRITE(*,'('' IERR at'',2I3)') IGRID,IER
      BLADESLOPENEW(IGRID)=(VY1+VY2)/2.D0+RESULT+
     &  S/TWOPI*(VY2-VY1)*LOADING(XGRID(IGRID))
     &  *DLOG(XGRID(IGRID)/(1.D0-XGRID(IGRID)))
      END DO
C   TRAILING EDGE blade slope
      IGRID=NGRID
      CALL DQAGS(F1regular,XGRID(1),XGRID(NGRID),
     &  EPSABS,EPSREL,RESULT,ABSERR,NEVAL,IER,LIMIT,LENW,LAST,
     &  IWORK,WORK)
      IF(IER.NE.0) WRITE(*,'('' IERR at'',2I3)') IGRID,IER
      BLADESLOPENEW(IGRID)=(VY1+VY2)/2.D0+RESULT
C   alternatively, one can set the leading edge slope by assuming
C   the first blade segment as quadratic
C   This GEOMETRICAL APPROXIMATION should work
C       with non-zero leading edge loading
C   over-write the leading edge slope
C      BLADESLOPENEW(1)=2.D0*BLADESHAPENEW(2)/XGRID(2)-BLADESLOPENEW(2)

C   compute relative error
      RELERR=0.D0
      DO IGRID=1,NGRID
        RELERR=RELERR
     &  +(BLADESHAPENEW(IGRID)-BLADESHAPEOLD(IGRID))**2
      END DO
      RELERR=DSQRT(RELERR)
      RETURN
      END SUBROUTINE BLADEUPDATE

      DOUBLEPRECISION FUNCTION F1regular(T)
C   integrand for updating BLADESLOPE(IGRID)
      IMPLICIT NONE
      INTEGER NMAX
      PARAMETER (NMAX=100)
      INTEGER NGRID,IGRID,IERR
      DOUBLEPRECISION XGRID(NMAX),
     &  BLADESHAPEOLD(NMAX),BLADESLOPEOLD(NMAX),
     &  BLADESHAPENEW(NMAX),BLADESLOPENEW(NMAX),
     &  BLADESEGMENT,VY1,VY2 !,PAR(3)
      DOUBLEPRECISION TWOPI,T,X,S,FX,DFX,FT
      DOUBLEPRECISION LOADING

      INTEGER INCFD,NE
      PARAMETER (INCFD=1,NE=1)
      LOGICAL SKIP
      DOUBLEPRECISION XE(1),FE(1)

      COMMON /GRID/ XGRID,BLADESEGMENT,NGRID,IGRID
      COMMON /BLADE/BLADESHAPEOLD,BLADESLOPEOLD,
     &              BLADESHAPENEW,BLADESLOPENEW
C      COMMON /PARAMS/ PAR
      COMMON /FLOWDIR/ VY1,VY2
      COMMON /SPACING/ S ! cascade spacing
C      EXTERNAL LOADING
      TWOPI=6.283185307179586D0
C   grid point where we update the blade
      X=XGRID(IGRID)
      FX =BLADESHAPEOLD(IGRID)
      DFX=BLADESLOPEOLD(IGRID)
C   hermite interpolation of the function FT
      SKIP=.TRUE.
      XE(1)=T
      CALL DPCHFE(NGRID,XGRID,BLADESHAPEOLD,BLADESLOPEOLD,
     &  INCFD,SKIP,NE,XE,FE,IERR)
      FT=FE(1)
C   compute regular integrand
      F1regular=DSINH(TWOPI/S*(X-T))+DFX*DSIN(TWOPI/S*(FX-FT))
      F1regular=F1regular/(DCOSH(TWOPI/S*(X-T))-DCOS(TWOPI/S*(FX-FT)))
      F1regular=F1regular*0.5D0*(VY2-VY1)*LOADING(T)
C       remove singularity
      F1regular=F1regular-S/TWOPI*(VY2-VY1)*LOADING(X)/(X-T)
      RETURN
      END FUNCTION F1regular

      DOUBLEPRECISION FUNCTION F1singular(T)
C   integrand for updating BLADESLOPE(IGRID)
      IMPLICIT NONE
      INTEGER NGRID,IGRID,IERR
      DOUBLEPRECISION XGRID(100),
     &  BLADESHAPEOLD(100),BLADESLOPEOLD(100),
     &  BLADESHAPENEW(100),BLADESLOPENEW(100),
     &  BLADESEGMENT,VY1,VY2 !,PAR(3)
      DOUBLEPRECISION TWOPI,T,X,S,FX,DFX,FT
      DOUBLEPRECISION LOADING

      INTEGER INCFD,NE
      PARAMETER (INCFD=1,NE=1)
      LOGICAL SKIP
      DOUBLEPRECISION XE(1),FE(1)

      COMMON /GRID/ XGRID,BLADESEGMENT,NGRID,IGRID
      COMMON /BLADE/BLADESHAPEOLD,BLADESLOPEOLD,
     &              BLADESHAPENEW,BLADESLOPENEW
C      COMMON /PARAMS/ PAR
      COMMON /FLOWDIR/ VY1,VY2
      COMMON /SPACING/ S ! cascade spacing
      EXTERNAL LOADING
      TWOPI=6.283185307179586D0
C   grid point where we update the blade
      X=XGRID(IGRID)
      FX =BLADESHAPEOLD(IGRID)
      DFX=BLADESLOPEOLD(IGRID)
C   hermite interpolation of the function FT
      SKIP=.TRUE.
      XE(1)=T
      CALL DPCHFE(NGRID,XGRID,BLADESHAPEOLD,BLADESLOPEOLD,
     &  INCFD,SKIP,NE,XE,FE,IERR)
      FT=FE(1)
C   compute singular integrand
      F1singular=DSINH(TWOPI/S*(X-T))+DFX*DSIN(TWOPI/S*(FX-FT))
      F1singular=F1singular/(DCOSH(TWOPI/S*(X-T))-DCOS(TWOPI/S*(FX-FT)))
      F1singular=F1singular*0.5D0*(VY2-VY1)*LOADING(T)
     &  *(T-X) ! prepare for Cauchy Principal Value quadrature
      RETURN
      END FUNCTION F1singular

      DOUBLEPRECISION FUNCTION F2regular(T)
C   integrand for updating BLADESHAPE(IGRID)
      IMPLICIT NONE
      INTEGER NMAX
      PARAMETER (NMAX=100)
      INTEGER NGRID,IGRID,IERR
      DOUBLEPRECISION XGRID(NMAX),
     &  BLADESHAPEOLD(NMAX),BLADESLOPEOLD(NMAX),
     &  BLADESHAPENEW(NMAX),BLADESLOPENEW(NMAX),
     &  BLADESEGMENT,VY1,VY2 !,PAR(3)
      DOUBLEPRECISION TWOPI,T,X,S,FX,DFX,FT
      DOUBLEPRECISION LOADING

      INTEGER INCFD,NE
      PARAMETER (INCFD=1,NE=1)
      LOGICAL SKIP
      DOUBLEPRECISION XE(1),FE(1)

      COMMON /GRID/ XGRID,BLADESEGMENT,NGRID,IGRID
      COMMON /BLADE/BLADESHAPEOLD,BLADESLOPEOLD,
     &              BLADESHAPENEW,BLADESLOPENEW
C      COMMON /PARAMS/ PAR
      COMMON /FLOWDIR/ VY1,VY2
      COMMON /SPACING/ S ! cascade spacing
C      EXTERNAL LOADING
      TWOPI=6.283185307179586D0
C   grid point where we update the blade
      X=XGRID(IGRID)
      FX =BLADESHAPEOLD(IGRID)
      DFX=BLADESLOPEOLD(IGRID)
C   hermite interpolation of the function FT
      SKIP=.TRUE.
      XE(1)=T
      CALL DPCHFE(NGRID,XGRID,BLADESHAPEOLD,BLADESLOPEOLD,
     &  INCFD,SKIP,NE,XE,FE,IERR)
      FT=FE(1)
C   compute regular integrand
      F2regular=DCOSH(TWOPI/S*(X-T))-DCOS(TWOPI/S*(FX-FT))
      F2regular=F2regular/(DCOSH(TWOPI/S*T)-DCOS(TWOPI/S*FT))
      F2regular=DLOG(F2regular)
     &  *S/(2.D0*TWOPI)*(VY2-VY1)*LOADING(T)
     &  -S/(2.D0*TWOPI)*(VY2-VY1)*LOADING(X)
     &  *DLOG((TWOPI/S*(X-T))**2*(1.D0+DFX*DFX)/2.D0)
      RETURN
      END FUNCTION F2regular
